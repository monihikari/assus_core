# Generated by Django 3.2.13 on 2022-04-18 06:54

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AntecedenteORM',
            fields=[
                ('creacion', models.DateTimeField(auto_now_add=True)),
                ('actualizacion', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('tipo_ocupacion', models.CharField(blank=True, choices=[('CEDULA_IDENTIDAD', 'CEDULA_IDENTIDAD'), ('PASAPORTE', 'PASAPORTE'), ('CEDULA_EXTRANJERO', 'CEDULA_EXTRANJERO')], default='CEDULA_IDENTIDAD', max_length=25, null=True, verbose_name='Tipo Doc. Identidad')),
                ('ocupacion_otro', models.CharField(max_length=255, verbose_name='Ocupación (Otro)')),
                ('contacto_covid', models.BooleanField(default=False, verbose_name='Contacto COVID')),
                ('fecha_contacto_covid', models.DateField(blank=True, null=True, verbose_name='Fecha Contacto COVID')),
                ('tuvo_covid', models.BooleanField(default=False, verbose_name='Tuvo COVID')),
                ('fecha_diagnostico_covid', models.DateField(blank=True, null=True, verbose_name='Fecha Diagnostico COVID')),
            ],
            options={
                'verbose_name': 'Antecedente',
                'verbose_name_plural': 'Antecedentes',
                'db_table': 'antecedentes',
                'ordering': ('-creacion',),
            },
        ),
        migrations.CreateModel(
            name='CondicionPacienteORM',
            fields=[
                ('creacion', models.DateTimeField(auto_now_add=True)),
                ('actualizacion', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('tiene_hipertension', models.BooleanField(default=False, verbose_name='Tiene Hipertension Arterial')),
                ('tiene_obesisdad', models.BooleanField(default=False, verbose_name='Tiene Obesidad')),
                ('tiene_diabetes', models.BooleanField(default=False, verbose_name='Tiene Diabetes')),
                ('esta_embarazada', models.BooleanField(default=False, verbose_name='Esta embarazada')),
                ('tiene_enfermedad_oncologica', models.BooleanField(default=False, verbose_name='Tiene Enfermedad Oncológica')),
                ('tiene_enfermedad_cardiaca', models.BooleanField(default=False, verbose_name='Tiene Enfermedad Cardiaca')),
                ('tiene_enfermedad_respiratoria', models.BooleanField(default=False, verbose_name='Tiene Enfermedad Respiratoria')),
                ('tiene_enfermedad_renal', models.BooleanField(default=False, verbose_name='Tiene Enfermedad Renal')),
                ('otra_enfermedad', models.TextField(blank=True, null=True, verbose_name='Tiene otra Enfermedad')),
            ],
            options={
                'verbose_name': 'Condicion de Paciente',
                'verbose_name_plural': 'Condiciones de Pacientes',
                'db_table': 'condicion_pacientes',
                'ordering': ('-creacion',),
            },
        ),
        migrations.CreateModel(
            name='DireccionORM',
            fields=[
                ('creacion', models.DateTimeField(auto_now_add=True)),
                ('actualizacion', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('pais', models.CharField(blank=True, max_length=100, null=True, verbose_name='Pais')),
                ('departamento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Departamento')),
                ('municipio', models.CharField(blank=True, max_length=255, null=True, verbose_name='Muicipio')),
                ('ciudad', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ciudad/Localidad')),
                ('calle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Calle')),
                ('zona', models.CharField(blank=True, max_length=255, null=True, verbose_name='Zona')),
                ('telefono', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telefono')),
                ('apoderado', models.CharField(blank=True, max_length=255, null=True, verbose_name='Apoderado')),
            ],
            options={
                'verbose_name': 'Direccion',
                'verbose_name_plural': 'Direcciones',
                'db_table': 'direcciones',
                'ordering': ('-creacion',),
            },
        ),
        migrations.CreateModel(
            name='EstablecimientoORM',
            fields=[
                ('creacion', models.DateTimeField(auto_now_add=True)),
                ('actualizacion', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('nombre', models.CharField(max_length=255, verbose_name='Nombre')),
                ('cod_establecimiento', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cód. Establecimiento')),
                ('red_salud', models.CharField(blank=True, max_length=255, null=True, verbose_name='Red de Salud')),
                ('sub_sector', models.CharField(blank=True, choices=[('PUBLICO', 'PUBLICO'), ('SEGURIDAD_SOCIAL', 'SEGURIDAD_SOCIAL'), ('PRIVADO', 'PRIVADO'), ('OTRO', 'OTRO')], max_length=50, null=True, verbose_name='Sub Sector')),
                ('otro_sub_sector', models.CharField(max_length=255, verbose_name='Otro Sub Sector')),
                ('direccion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='statistics.direccionorm', verbose_name='Dirección')),
            ],
            options={
                'verbose_name': 'Establecimiento',
                'verbose_name_plural': 'Establecimientos',
                'db_table': 'establecimientos',
                'ordering': ('-creacion',),
            },
        ),
        migrations.CreateModel(
            name='PacienteORM',
            fields=[
                ('creacion', models.DateTimeField(auto_now_add=True)),
                ('actualizacion', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('doc_identidad', models.CharField(max_length=12, verbose_name='C.I.')),
                ('tipo_doc_identidad', models.CharField(choices=[('CEDULA_IDENTIDAD', 'CEDULA_IDENTIDAD'), ('PASAPORTE', 'PASAPORTE'), ('CEDULA_EXTRANJERO', 'CEDULA_EXTRANJERO')], default='CEDULA_IDENTIDAD', max_length=25, verbose_name='Tipo Doc. Identidad')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha Nacimiento')),
                ('nombres', models.CharField(max_length=255, verbose_name='Nombres')),
                ('ap_paterno', models.CharField(max_length=255, verbose_name='Ap. Paterno')),
                ('ap_materno', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ap. Materno')),
                ('genero', models.CharField(choices=[('M', 'M'), ('F', 'F')], max_length=2, verbose_name='Género')),
                ('idendificacion_etnica', models.CharField(blank=True, max_length=255, null=True, verbose_name='Identificación étnica')),
                ('direccion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='statistics.direccionorm', verbose_name='Direccion')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'db_table': 'pacientes',
                'ordering': ('-creacion',),
            },
        ),
        migrations.CreateModel(
            name='PosibleContagiadoORM',
            fields=[
                ('creacion', models.DateTimeField(auto_now_add=True)),
                ('actualizacion', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('nombres', models.CharField(max_length=255, verbose_name='Nombres')),
                ('apellidos', models.CharField(max_length=255, verbose_name='Apellidos')),
                ('genero', models.CharField(choices=[('M', 'M'), ('F', 'F')], max_length=2, verbose_name='Género')),
                ('telefono', models.CharField(blank=True, max_length=255, null=True, verbose_name='Teléfono')),
                ('direccion', models.TextField(blank=True, null=True, verbose_name='direccion')),
            ],
            options={
                'verbose_name': 'Posible Contagiado',
                'verbose_name_plural': 'Posibles Contagiados',
                'db_table': 'posibles_contagiados',
                'ordering': ('-creacion',),
            },
        ),
        migrations.CreateModel(
            name='RegistroLaboratorioORM',
            fields=[
                ('creacion', models.DateTimeField(auto_now_add=True)),
                ('actualizacion', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('se_tomo_muestra', models.BooleanField(default=False, verbose_name='Se Tomó muestra para Lab.')),
                ('razon_rechazo', models.CharField(blank=True, choices=[('FALTA_DE_INSUMOS', 'FALTA_DE_INSUMOS'), ('FALLECIMIENTO', 'FALLECIMIENTO'), ('OTRO', 'OTRO')], max_length=50, null=True, verbose_name='Razon Rechazo')),
                ('otra_razon_rechazo', models.TextField(blank=True, null=True, verbose_name='Otra Razon de rechazo')),
                ('tipo_muestra', models.CharField(blank=True, choices=[('ASPIRADO', 'ASPIRADO'), ('ESPUTO', 'ESPUTO'), ('LAVADO_BRONCO_ALVEOLAR', 'LAVADO_BRONCO_ALVEOLAR'), ('HISOPADO_NASOFARINGEO', 'HISOPADO_NASOFARINGEO'), ('HISOPADO_COMBINADO', 'HISOPADO_COMBINADO'), ('OTRO', 'OTRO')], max_length=50, null=True, verbose_name='Tipo de Muestra')),
                ('otro_tipo_muestra', models.TextField(blank=True, null=True, verbose_name='Otro Tipo de Muestra')),
                ('laboratorio_procesador', models.TextField(blank=True, help_text='Es el Laboratorio que procesará la muestra', null=True, verbose_name='Nombre Laboratorio')),
                ('fecha_toma_muestra', models.DateField(blank=True, null=True, verbose_name='Fecha Toma de Muestra')),
                ('fecha_envio_muestra', models.DateField(blank=True, null=True, verbose_name='Fecha Envio de Muestra')),
                ('observaciones', models.TextField(blank=True, null=True, verbose_name='Observaciones')),
                ('metodo_diagnostico', models.CharField(blank=True, choices=[('PCR_TIEMPO_REAL', 'PCR_TIEMPO_REAL'), ('PCR_GENEXPERT', 'PCR_GENEXPERT'), ('TEST_ANTIGENO', 'TEST_ANTIGENO')], max_length=50, null=True, verbose_name='Método de Diagnostico')),
                ('resultado', models.CharField(blank=True, choices=[('POSITIVO', 'POSITIVO'), ('NEGATIVO', 'NEGATIVO')], max_length=50, null=True, verbose_name='Resultado')),
                ('fecha_resultado', models.DateField(blank=True, null=True, verbose_name='Fecha del Resultado')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.pacienteorm', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Registro de Laboratorio',
                'verbose_name_plural': 'Registros de Laboratorio',
                'db_table': 'registros_laboratorio',
                'ordering': ('-creacion',),
            },
        ),
        migrations.CreateModel(
            name='RegistroClinicoORM',
            fields=[
                ('creacion', models.DateTimeField(auto_now_add=True)),
                ('actualizacion', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('es_sintomatico', models.BooleanField(default=False, verbose_name='Es Sintomatico')),
                ('fecha_inicio_intomas', models.DateField(blank=True, null=True, verbose_name='Fecha Inicio Sintomas')),
                ('tiene_tos_seca', models.BooleanField(default=False, verbose_name='Tiene Tos Seca')),
                ('tiene_fiebre', models.BooleanField(default=False, verbose_name='Tiene Fiebre')),
                ('tiene_malestar_gral', models.BooleanField(default=False, verbose_name='Tiene Malestar Gral')),
                ('tiene_cefalea', models.BooleanField(default=False, verbose_name='Tiene Cefalea')),
                ('tiene_dificultar_respiratoria', models.BooleanField(default=False, verbose_name='Tiene Dificultar Respiratoria')),
                ('tiene_mialgias', models.BooleanField(default=False, verbose_name='Tiene Mialgias')),
                ('tiene_dolor_garganta', models.BooleanField(default=False, verbose_name='Tiene Dolor de Garganta')),
                ('tiene_dismunucion_olfato', models.BooleanField(default=False, verbose_name='Tiene perdida/disminucion del Olfato')),
                ('tiene_dismunucion_gusto', models.BooleanField(default=False, verbose_name='Tiene perdida/disminucion del Gusto')),
                ('otro_sintoma', models.TextField(blank=True, null=True, verbose_name='Otro Sintoma')),
                ('estado_paciente', models.CharField(choices=[('LEVE', 'LEVE'), ('GRAVE', 'GRAVE'), ('FALLECIDO', 'FALLECIDO')], default='LEVE', max_length=25, verbose_name='Estado del Paciente')),
                ('fecha_defuncion', models.DateField(blank=True, null=True, verbose_name='Fecha Defuncion')),
                ('diag_sindrome_gripal', models.BooleanField(default=False, verbose_name='Diag. Sindrome Gripal')),
                ('diag_neumonia', models.BooleanField(default=False, verbose_name='Diag. Neumonia')),
                ('otro_diagnostico', models.TextField(blank=True, null=True, verbose_name='Otro Diagnostico')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.pacienteorm', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Registro Clinico',
                'verbose_name_plural': 'Registro Clinicos',
                'db_table': 'registros_clinicos',
                'ordering': ('-creacion',),
            },
        ),
        migrations.CreateModel(
            name='PosibleContagioORM',
            fields=[
                ('creacion', models.DateTimeField(auto_now_add=True)),
                ('actualizacion', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('relacion', models.CharField(max_length=255, verbose_name='Relación')),
                ('lugar_contacto', models.CharField(max_length=255, verbose_name='Relación')),
                ('fecha_contacto', models.DateField(verbose_name='Fecha Contacto')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.pacienteorm', verbose_name='Paciente')),
                ('posible_contagiado', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.posiblecontagiadoorm', verbose_name='Posible Contagiado')),
            ],
            options={
                'verbose_name': 'Posible Contagio',
                'verbose_name_plural': 'Posibles Contagios',
                'db_table': 'posibles_contagios',
                'ordering': ('-creacion',),
            },
        ),
        migrations.CreateModel(
            name='HospitalizacionORM',
            fields=[
                ('creacion', models.DateTimeField(auto_now_add=True)),
                ('actualizacion', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('es_ambulatorio', models.BooleanField(default=False, verbose_name='Es Ambulatorio')),
                ('es_internado', models.BooleanField(default=False, verbose_name='Es Internado')),
                ('lugar_aislamiento', models.TextField(blank=True, null=True, verbose_name='Lugar Aislamiento')),
                ('fecha_aislamiento', models.DateField(blank=True, null=True, verbose_name='Fecha Aislamiento')),
                ('fecha_internacion', models.DateField(blank=True, null=True, verbose_name='Fecha Internacion')),
                ('con_ventilacion_mecanica', models.BooleanField(default=False, verbose_name='Con Ventilación Mecanica')),
                ('es_terapia_intensiva', models.BooleanField(default=False, verbose_name='En Terapia INtensiva')),
                ('fecha_ingreso_uti', models.DateField(blank=True, null=True, verbose_name='Fecha de Ingreso(UTI)')),
                ('estblecimiento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.establecimientoorm', verbose_name='Estblecimiento de Salud')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.pacienteorm', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Hospitalizacion',
                'verbose_name_plural': 'Hospitalizaciones',
                'db_table': 'hospitalizaciones',
                'ordering': ('-creacion',),
            },
        ),
        migrations.CreateModel(
            name='FichaEpidemiologicaORM',
            fields=[
                ('creacion', models.DateTimeField(auto_now_add=True)),
                ('actualizacion', models.DateTimeField(auto_now=True)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='UUID')),
                ('nombres_notificador', models.CharField(max_length=255, verbose_name='Nombres (Notificador)')),
                ('apellidos_notificador', models.CharField(max_length=255, verbose_name='Apellidos (Notificador)')),
                ('telefonno_notificador', models.CharField(blank=True, max_length=255, null=True, verbose_name='Telefono (Notificador)')),
                ('fecha_notificacion', models.DateField(blank=True, null=True, verbose_name='Fecha de Notificacion')),
                ('semana_epidemiologica', models.PositiveIntegerField(blank=True, null=True, verbose_name='Semana Epidemiologica')),
                ('identificado_en_busqueda_activa', models.BooleanField(default=False, verbose_name='Identificado en Busqueda Activa')),
                ('antecedente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.antecedenteorm', verbose_name='Antecedente')),
                ('condicion_paciente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.condicionpacienteorm', verbose_name='Condicion Paciente')),
                ('estblecimiento', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.establecimientoorm', verbose_name='Estblecimiento de Salud')),
                ('hospitalizacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='statistics.hospitalizacionorm', verbose_name='Hospitalización')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.pacienteorm', verbose_name='Paciente')),
                ('posibles_contagios', models.ManyToManyField(blank=True, to='statistics.PosibleContagioORM', verbose_name='Posibles Contagios')),
                ('registro_clinico', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.registroclinicoorm', verbose_name='Registro Clinico')),
                ('registro_laboratorio', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.registrolaboratorioorm', verbose_name='Registro Laboratorio')),
            ],
            options={
                'verbose_name': 'Ficha Epidemiologica',
                'verbose_name_plural': 'Ficha Epidemiologicas',
                'db_table': 'fichas_epidemiologicas',
                'ordering': ('-creacion',),
            },
        ),
        migrations.AddField(
            model_name='condicionpacienteorm',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.pacienteorm', verbose_name='Paciente'),
        ),
        migrations.AddField(
            model_name='antecedenteorm',
            name='lugar_probable_infeccion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='statistics.direccionorm', verbose_name='Lugar Probable Infección'),
        ),
        migrations.AddField(
            model_name='antecedenteorm',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='statistics.pacienteorm', verbose_name='Paciente'),
        ),
    ]
